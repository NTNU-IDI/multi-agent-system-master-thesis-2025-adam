# TODO Move ITool?
from typing import Dict, List, Optional, Protocol, Union

from orchestrator.schemas.schemas import AgentConfig, AskSchema, FunctionCallSchema, ReplySchema


class IAgent(Protocol):
    async def run(self, input: AskSchema) -> Union[ReplySchema, FunctionCallSchema]: ...


class ITool(Protocol):
    def execute(self, **kwargs) -> dict: ...


class IAgentRegistry(Protocol):
    def register(self, agent: IAgent, config: AgentConfig) -> None: ...
    def unregister(self, agent_id: str) -> None: ...
    def get_agent(self, agent_id: str) -> Optional[IAgent]: ...
    def list_agents(self) -> Dict[str, str]: ...


class IRepository(Protocol):
    def set(self, key: str, value: str) -> None: ...
    def get(self, key: str) -> Optional[str]: ...
    def delete(self, key: str) -> None: ...
    def keys(self, pattern: str) -> List[str]: ...
